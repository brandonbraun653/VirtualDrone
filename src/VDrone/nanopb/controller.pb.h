/* Automatically generated nanopb header */
/* Generated by nanopb-0.4.6-dev */

#ifndef PB_LIB_VIRTUALDRONE_SRC_VDRONE_NANOPB_CONTROLLER_PB_H_INCLUDED
#define PB_LIB_VIRTUALDRONE_SRC_VDRONE_NANOPB_CONTROLLER_PB_H_INCLUDED
#include <pb.h>

#if PB_PROTO_HEADER_VERSION != 40
#error Regenerate this file with the current version of nanopb generator.
#endif

/* Struct definitions */
typedef struct _ControllerInputs { 
    uint32_t timestamp; /* System ticks in milliseconds */
    uint32_t stick_inputs; /* Packed 4 bytes: Pitch, Roll, Yaw, Throttle */
    uint32_t switch_inputs; /* Packed 4 bytes: Switch A/B/C/D */
    uint32_t encoder_inputs; /* Packed 4 bytes: Encoder 0/1 Position/Button State */
} ControllerInputs;


#ifdef __cplusplus
extern "C" {
#endif

/* Initializer values for message structs */
#define ControllerInputs_init_default            {0, 0, 0, 0}
#define ControllerInputs_init_zero               {0, 0, 0, 0}

/* Field tags (for use in manual encoding/decoding) */
#define ControllerInputs_timestamp_tag           1
#define ControllerInputs_stick_inputs_tag        2
#define ControllerInputs_switch_inputs_tag       3
#define ControllerInputs_encoder_inputs_tag      4

/* Struct field encoding specification for nanopb */
#define ControllerInputs_FIELDLIST(X, a) \
X(a, STATIC,   REQUIRED, FIXED32,  timestamp,         1) \
X(a, STATIC,   REQUIRED, FIXED32,  stick_inputs,      2) \
X(a, STATIC,   REQUIRED, FIXED32,  switch_inputs,     3) \
X(a, STATIC,   REQUIRED, FIXED32,  encoder_inputs,    4)
#define ControllerInputs_CALLBACK NULL
#define ControllerInputs_DEFAULT NULL

extern const pb_msgdesc_t ControllerInputs_msg;

/* Defines for backwards compatibility with code written before nanopb-0.4.0 */
#define ControllerInputs_fields &ControllerInputs_msg

/* Maximum encoded size of messages (where known) */
#define ControllerInputs_size                    20

#ifdef __cplusplus
} /* extern "C" */
#endif

#endif
